{
  "contractName": "Farmer",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_farmerRawProducts",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_rawProductFarmers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_id",
          "type": "address"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "role",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct Stakeholder.stakeholder",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_id",
          "type": "address"
        }
      ],
      "name": "getRole",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_id",
          "type": "address"
        }
      ],
      "name": "isVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_location",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "register",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_productId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_id",
          "type": "address"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_location",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_rawProducts",
          "type": "string[]"
        }
      ],
      "name": "registerFarmer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_rawProduct",
          "type": "string"
        }
      ],
      "name": "addRawProduct",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_id",
          "type": "address"
        }
      ],
      "name": "getFarmer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "role",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct Stakeholder.stakeholder",
          "name": "farmer",
          "type": "tuple"
        },
        {
          "internalType": "string[]",
          "name": "rawProducts",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_rawProduct",
          "type": "string"
        }
      ],
      "name": "getRawProductFarmers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_farmerRawProducts\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_rawProductFarmers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_rawProduct\",\"type\":\"string\"}],\"name\":\"addRawProduct\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_id\",\"type\":\"address\"}],\"name\":\"get\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct Stakeholder.stakeholder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_id\",\"type\":\"address\"}],\"name\":\"getFarmer\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct Stakeholder.stakeholder\",\"name\":\"farmer\",\"type\":\"tuple\"},{\"internalType\":\"string[]\",\"name\":\"rawProducts\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_rawProduct\",\"type\":\"string\"}],\"name\":\"getRawProductFarmers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_id\",\"type\":\"address\"}],\"name\":\"getRole\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_id\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_rawProducts\",\"type\":\"string[]\"}],\"name\":\"registerFarmer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_productId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_id\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/MIT Academy of Engineering/Major Project/Major_Project_Code/supply-chain-dev/src/Smart-Contract/Contracts/Farmer.sol\":\"Farmer\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/MIT Academy of Engineering/Major Project/Major_Project_Code/supply-chain-dev/src/Smart-Contract/Contracts/Admin.sol\":{\"keccak256\":\"0xb63882f45f51b396db0916a630be1b1dc6e03a6fbeec65053422651ddc475260\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://f3160326dde1d8e083cc80986efa3b74a0344f9901e354dd0938e0cd98bc8f3b\",\"dweb:/ipfs/QmPumJLo2takCJHSefF8vcAF3xCc111HahXdgnDZKqqwag\"]},\"/D/MIT Academy of Engineering/Major Project/Major_Project_Code/supply-chain-dev/src/Smart-Contract/Contracts/Farmer.sol\":{\"keccak256\":\"0x647c5ee1c250a216e97ff4de03f022f3d583297fd0255b9ae5933b8c27b96c4a\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://02e7d6e66785abc856d4a81836281fbb9ceaa0c32d0f70d0bef613d450fdbd52\",\"dweb:/ipfs/QmWK2Lc2x37dPVtc4YBkUX1Pc6QqQymDhcWYuWnf2MocCL\"]},\"/D/MIT Academy of Engineering/Major Project/Major_Project_Code/supply-chain-dev/src/Smart-Contract/Contracts/Stakeholder.sol\":{\"keccak256\":\"0x8f65765380b01d0314d983dcb4af6625792382b7fa7f90eae23e247a05607b50\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://51c26558ea2bf8250f4ba3f4da043fb9923d0364ccb3221188ea1f12a0ffcbe2\",\"dweb:/ipfs/QmXLCZTxwmW63v5EaGaD389uExK6J85pphPjtyW3MfW7Pp\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050612efa806100626000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063880f8fd7116100a2578063b9209e3311610071578063b9209e331461033e578063c2bc2efc1461036e578063e7609c161461039e578063e985e9c5146103cf578063f851a440146103ff5761010b565b8063880f8fd714610290578063a22cb465146102c0578063a39fac12146102f0578063af8f44cc1461030e5761010b565b8063518cc0b3116100de578063518cc0b3146101d057806363a9c3d7146102005780637bb08f33146102305780638531358f146102605761010b565b806323b872dd1461011057806324d7806c1461014057806344276733146101705780634cd08d03146101a0575b600080fd5b61012a6004803603810190610125919061201c565b61041d565b60405161013791906129da565b60405180910390f35b61015a60048036038101906101559190611fb7565b6106d0565b60405161016791906129da565b60405180910390f35b61018a60048036038101906101859190611fb7565b610729565b60405161019791906129f5565b60405180910390f35b6101ba60048036038101906101b59190612124565b6107fd565b6040516101c791906129da565b60405180910390f35b6101ea60048036038101906101e591906120a7565b610a7d565b6040516101f791906129f5565b60405180910390f35b61021a60048036038101906102159190611fb7565b610b36565b60405161022791906129da565b60405180910390f35b61024a600480360381019061024591906121bb565b610bf4565b60405161025791906129da565b60405180910390f35b61027a6004803603810190610275919061227e565b610fa8565b604051610287919061299d565b60405180910390f35b6102aa60048036038101906102a591906120e3565b61100c565b6040516102b791906129da565b60405180910390f35b6102da60048036038101906102d5919061206b565b611290565b6040516102e791906129da565b60405180910390f35b6102f861140f565b60405161030591906129b8565b60405180910390f35b610328600480360381019061032391906120e3565b61149d565b60405161033591906129b8565b60405180910390f35b61035860048036038101906103539190611fb7565b611549565b60405161036591906129da565b60405180910390f35b61038860048036038101906103839190611fb7565b6115a2565b6040516103959190612b37565b60405180910390f35b6103b860048036038101906103b39190611fb7565b61198d565b6040516103c6929190612b59565b60405180910390f35b6103e960048036038101906103e49190611fe0565b611c23565b6040516103f691906129da565b60405180910390f35b610407611cb7565b604051610414919061299d565b60405180910390f35b600083826000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff169050600061048f8433611c23565b806104c557508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b90508180156104d15750805b610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050790612af7565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690612ab7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690612a77565b60405180910390fd5b6000600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060006101000a81548160ff02191690831515021790555060019450505050509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805461077890612d66565b80601f01602080910402602001604051908101604052809291908181526020018280546107a490612d66565b80156107f15780601f106107c6576101008083540402835291602001916107f1565b820191906000526020600020905b8154815290600101906020018083116107d457829003601f168201915b50505050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c690612ad7565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200160001515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906109b1929190611cdb565b5060408201518160020190805190602001906109ce929190611cdb565b5060608201518160030190805190602001906109eb929190611cdb565b5060808201518160040160006101000a81548160ff0219169083151502179055509050506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190509392505050565b60056020528160005260406000208181548110610a9957600080fd5b90600052602060002001600091509150508054610ab590612d66565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae190612d66565b8015610b2e5780601f10610b0357610100808354040283529160200191610b2e565b820191906000526020600020905b815481529060010190602001808311610b1157829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b9157600080fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff02191690831515021790555060019050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd90612a37565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200160001515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610da8929190611cdb565b506040820151816002019080519060200190610dc5929190611cdb565b506060820151816003019080519060200190610de2929190611cdb565b5060808201518160040160006101000a81548160ff02191690831515021790555090505081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610e59929190611d61565b5060005b8251811015610f38576006838281518110610ea1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051610eb6919061296f565b9081526020016040518091039020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610f3090612d98565b915050610e5d565b506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050949350505050565b6006828051602081018201805184825260208301602085012081835280955050505050508181548110610fda57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000905060005b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081101561114c5783604051602001611071919061296f565b60405160208183030381529060405280519060200120600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106110fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016040516020016111189190612986565b60405160208183030381529060405280519060200120141561113957600191505b808061114490612d98565b915050611016565b50801561118e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118590612a17565b60405180910390fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611206929190611cdb565b50600683604051611217919061296f565b9081526020016040518091039020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f890612a57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136890612b17565b60405180910390fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001905092915050565b6060600480548060200260200160405190810160405280929190818152602001828054801561149357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611449575b5050505050905090565b60606006826040516114af919061296f565b908152602001604051809103902080548060200260200160405190810160405280929190818152602001828054801561153d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114f3575b50505050509050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff169050919050565b6115aa611dc1565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806116d55750600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170b90612a97565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546117c490612d66565b80601f01602080910402602001604051908101604052809291908181526020018280546117f090612d66565b801561183d5780601f106118125761010080835404028352916020019161183d565b820191906000526020600020905b81548152906001019060200180831161182057829003601f168201915b5050505050815260200160028201805461185690612d66565b80601f016020809104026020016040519081016040528092919081815260200182805461188290612d66565b80156118cf5780601f106118a4576101008083540402835291602001916118cf565b820191906000526020600020905b8154815290600101906020018083116118b257829003601f168201915b505050505081526020016003820180546118e890612d66565b80601f016020809104026020016040519081016040528092919081815260200182805461191490612d66565b80156119615780601f1061193657610100808354040283529160200191611961565b820191906000526020600020905b81548152906001019060200180831161194457829003601f168201915b505050505081526020016004820160009054906101000a900460ff161515151581525050915050919050565b611995611dc1565b606082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611ac25750600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af890612a97565b60405180910390fd5b611b0a846115a2565b9250600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611c17578382906000526020600020018054611b8a90612d66565b80601f0160208091040260200160405190810160405280929190818152602001828054611bb690612d66565b8015611c035780601f10611bd857610100808354040283529160200191611c03565b820191906000526020600020905b815481529060010190602001808311611be657829003601f168201915b505050505081526020019060010190611b6b565b50505050915050915091565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054611ce790612d66565b90600052602060002090601f016020900481019282611d095760008555611d50565b82601f10611d2257805160ff1916838001178555611d50565b82800160010185558215611d50579182015b82811115611d4f578251825591602001919060010190611d34565b5b509050611d5d9190611e08565b5090565b828054828255906000526020600020908101928215611db0579160200282015b82811115611daf578251829080519060200190611d9f929190611cdb565b5091602001919060010190611d81565b5b509050611dbd9190611e25565b5090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016000151581525090565b5b80821115611e21576000816000905550600101611e09565b5090565b5b80821115611e455760008181611e3c9190611e49565b50600101611e26565b5090565b508054611e5590612d66565b6000825580601f10611e675750611e86565b601f016020900490600052602060002090810190611e859190611e08565b5b50565b6000611e9c611e9784612bc1565b612b90565b9050808382526020820190508260005b85811015611edc5781358501611ec28882611f78565b845260208401935060208301925050600181019050611eac565b5050509392505050565b6000611ef9611ef484612bed565b612b90565b905082815260208101848484011115611f1157600080fd5b611f1c848285612d24565b509392505050565b600081359050611f3381612e7f565b92915050565b600082601f830112611f4a57600080fd5b8135611f5a848260208601611e89565b91505092915050565b600081359050611f7281612e96565b92915050565b600082601f830112611f8957600080fd5b8135611f99848260208601611ee6565b91505092915050565b600081359050611fb181612ead565b92915050565b600060208284031215611fc957600080fd5b6000611fd784828501611f24565b91505092915050565b60008060408385031215611ff357600080fd5b600061200185828601611f24565b925050602061201285828601611f24565b9150509250929050565b60008060006060848603121561203157600080fd5b600061203f86828701611f24565b935050602061205086828701611f24565b925050604061206186828701611fa2565b9150509250925092565b6000806040838503121561207e57600080fd5b600061208c85828601611f24565b925050602061209d85828601611f63565b9150509250929050565b600080604083850312156120ba57600080fd5b60006120c885828601611f24565b92505060206120d985828601611fa2565b9150509250929050565b6000602082840312156120f557600080fd5b600082013567ffffffffffffffff81111561210f57600080fd5b61211b84828501611f78565b91505092915050565b60008060006060848603121561213957600080fd5b600084013567ffffffffffffffff81111561215357600080fd5b61215f86828701611f78565b935050602084013567ffffffffffffffff81111561217c57600080fd5b61218886828701611f78565b925050604084013567ffffffffffffffff8111156121a557600080fd5b6121b186828701611f78565b9150509250925092565b600080600080608085870312156121d157600080fd5b600085013567ffffffffffffffff8111156121eb57600080fd5b6121f787828801611f78565b945050602085013567ffffffffffffffff81111561221457600080fd5b61222087828801611f78565b935050604085013567ffffffffffffffff81111561223d57600080fd5b61224987828801611f78565b925050606085013567ffffffffffffffff81111561226657600080fd5b61227287828801611f39565b91505092959194509250565b6000806040838503121561229157600080fd5b600083013567ffffffffffffffff8111156122ab57600080fd5b6122b785828601611f78565b92505060206122c885828601611fa2565b9150509250929050565b60006122de83836122fe565b60208301905092915050565b60006122f6838361240d565b905092915050565b61230781612cdc565b82525050565b61231681612cdc565b82525050565b600061232782612c52565b6123318185612c8d565b935061233c83612c1d565b8060005b8381101561236d57815161235488826122d2565b975061235f83612c73565b925050600181019050612340565b5085935050505092915050565b600061238582612c5d565b61238f8185612c9e565b9350836020820285016123a185612c2d565b8060005b858110156123dd57848403895281516123be85826122ea565b94506123c983612c80565b925060208a019950506001810190506123a5565b50829750879550505050505092915050565b6123f881612cee565b82525050565b61240781612cee565b82525050565b600061241882612c68565b6124228185612caf565b9350612432818560208601612d33565b61243b81612e6e565b840191505092915050565b600061245182612c68565b61245b8185612cc0565b935061246b818560208601612d33565b61247481612e6e565b840191505092915050565b600061248a82612c68565b6124948185612cd1565b93506124a4818560208601612d33565b80840191505092915050565b600081546124bd81612d66565b6124c78186612cd1565b945060018216600081146124e257600181146124f357612526565b60ff19831686528186019350612526565b6124fc85612c3d565b60005b8381101561251e578154818901526001820191506020810190506124ff565b838801955050505b50505092915050565b600061253c603083612cc0565b91507f4661726d65723a3a61646452617750726f647563743a205261772070726f647560008301527f637420616c7265616479206164646564000000000000000000000000000000006020830152604082019050919050565b60006125a2603183612cc0565b91507f4661726d65723a3a72656769737465724661726d65723a204661726d6572206160008301527f6c726561647920726567697374657265640000000000000000000000000000006020830152604082019050919050565b6000612608603c83612cc0565b91507f5374616b65686f6c6465723a3a736574417070726f76616c466f72416c6c3a2060008301527f43616e6e6f742073657420617070726f76616c20666f722073656c66000000006020830152604082019050919050565b600061266e603a83612cc0565b91507f5374616b65686f6c6465723a3a7472616e7366657246726f6d3a2043616e6e6f60008301527f74207472616e7366657220746f206e756c6c20616464726573730000000000006020830152604082019050919050565b60006126d4602983612cc0565b91507f4f6e6c79207374616b65686f6c6465722063616e20616363657373207468697360008301527f2066756e6374696f6e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061273a603283612cc0565b91507f5374616b65686f6c6465723a3a7472616e7366657246726f6d3a2043616e6e6f60008301527f74207472616e7366657220746f2073656c6600000000000000000000000000006020830152604082019050919050565b60006127a0603583612cc0565b91507f5374616b65686f6c6465723a3a72656769737465723a205374616b65686f6c6460008301527f657220616c7265616479207265676973746572656400000000000000000000006020830152604082019050919050565b6000612806602f83612cc0565b91507f4f6e6c79206f776e6572206f7220617070726f7665642063616e20616363657360008301527f7320746869732066756e6374696f6e00000000000000000000000000000000006020830152604082019050919050565b600061286c604483612cc0565b91507f5374616b65686f6c6465723a3a736574417070726f76616c466f72416c6c3a2060008301527f43616e6e6f742073657420617070726f76616c20666f72206e756c6c2061646460208301527f72657373000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b600060a08301600083015161290360008601826122fe565b506020830151848203602086015261291b828261240d565b91505060408301518482036040860152612935828261240d565b9150506060830151848203606086015261294f828261240d565b915050608083015161296460808601826123ef565b508091505092915050565b600061297b828461247f565b915081905092915050565b600061299282846124b0565b915081905092915050565b60006020820190506129b2600083018461230d565b92915050565b600060208201905081810360008301526129d2818461231c565b905092915050565b60006020820190506129ef60008301846123fe565b92915050565b60006020820190508181036000830152612a0f8184612446565b905092915050565b60006020820190508181036000830152612a308161252f565b9050919050565b60006020820190508181036000830152612a5081612595565b9050919050565b60006020820190508181036000830152612a70816125fb565b9050919050565b60006020820190508181036000830152612a9081612661565b9050919050565b60006020820190508181036000830152612ab0816126c7565b9050919050565b60006020820190508181036000830152612ad08161272d565b9050919050565b60006020820190508181036000830152612af081612793565b9050919050565b60006020820190508181036000830152612b10816127f9565b9050919050565b60006020820190508181036000830152612b308161285f565b9050919050565b60006020820190508181036000830152612b5181846128eb565b905092915050565b60006040820190508181036000830152612b7381856128eb565b90508181036020830152612b87818461237a565b90509392505050565b6000604051905081810181811067ffffffffffffffff82111715612bb757612bb6612e3f565b5b8060405250919050565b600067ffffffffffffffff821115612bdc57612bdb612e3f565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612c0857612c07612e3f565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612ce782612cfa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612d51578082015181840152602081019050612d36565b83811115612d60576000848401525b50505050565b60006002820490506001821680612d7e57607f821691505b60208210811415612d9257612d91612e10565b5b50919050565b6000612da382612d1a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612dd657612dd5612de1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612e8881612cdc565b8114612e9357600080fd5b50565b612e9f81612cee565b8114612eaa57600080fd5b50565b612eb681612d1a565b8114612ec157600080fd5b5056fea264697066735822122001183253cd54ca15948cc060b849edc85d4e7af9bad4e135ea97c4407d5d88f764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c8063880f8fd7116100a2578063b9209e3311610071578063b9209e331461033e578063c2bc2efc1461036e578063e7609c161461039e578063e985e9c5146103cf578063f851a440146103ff5761010b565b8063880f8fd714610290578063a22cb465146102c0578063a39fac12146102f0578063af8f44cc1461030e5761010b565b8063518cc0b3116100de578063518cc0b3146101d057806363a9c3d7146102005780637bb08f33146102305780638531358f146102605761010b565b806323b872dd1461011057806324d7806c1461014057806344276733146101705780634cd08d03146101a0575b600080fd5b61012a6004803603810190610125919061201c565b61041d565b60405161013791906129da565b60405180910390f35b61015a60048036038101906101559190611fb7565b6106d0565b60405161016791906129da565b60405180910390f35b61018a60048036038101906101859190611fb7565b610729565b60405161019791906129f5565b60405180910390f35b6101ba60048036038101906101b59190612124565b6107fd565b6040516101c791906129da565b60405180910390f35b6101ea60048036038101906101e591906120a7565b610a7d565b6040516101f791906129f5565b60405180910390f35b61021a60048036038101906102159190611fb7565b610b36565b60405161022791906129da565b60405180910390f35b61024a600480360381019061024591906121bb565b610bf4565b60405161025791906129da565b60405180910390f35b61027a6004803603810190610275919061227e565b610fa8565b604051610287919061299d565b60405180910390f35b6102aa60048036038101906102a591906120e3565b61100c565b6040516102b791906129da565b60405180910390f35b6102da60048036038101906102d5919061206b565b611290565b6040516102e791906129da565b60405180910390f35b6102f861140f565b60405161030591906129b8565b60405180910390f35b610328600480360381019061032391906120e3565b61149d565b60405161033591906129b8565b60405180910390f35b61035860048036038101906103539190611fb7565b611549565b60405161036591906129da565b60405180910390f35b61038860048036038101906103839190611fb7565b6115a2565b6040516103959190612b37565b60405180910390f35b6103b860048036038101906103b39190611fb7565b61198d565b6040516103c6929190612b59565b60405180910390f35b6103e960048036038101906103e49190611fe0565b611c23565b6040516103f691906129da565b60405180910390f35b610407611cb7565b604051610414919061299d565b60405180910390f35b600083826000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff169050600061048f8433611c23565b806104c557508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b90508180156104d15750805b610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050790612af7565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690612ab7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690612a77565b60405180910390fd5b6000600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060006101000a81548160ff02191690831515021790555060019450505050509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805461077890612d66565b80601f01602080910402602001604051908101604052809291908181526020018280546107a490612d66565b80156107f15780601f106107c6576101008083540402835291602001916107f1565b820191906000526020600020905b8154815290600101906020018083116107d457829003601f168201915b50505050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c690612ad7565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200160001515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906109b1929190611cdb565b5060408201518160020190805190602001906109ce929190611cdb565b5060608201518160030190805190602001906109eb929190611cdb565b5060808201518160040160006101000a81548160ff0219169083151502179055509050506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190509392505050565b60056020528160005260406000208181548110610a9957600080fd5b90600052602060002001600091509150508054610ab590612d66565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae190612d66565b8015610b2e5780601f10610b0357610100808354040283529160200191610b2e565b820191906000526020600020905b815481529060010190602001808311610b1157829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b9157600080fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff02191690831515021790555060019050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd90612a37565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200160001515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610da8929190611cdb565b506040820151816002019080519060200190610dc5929190611cdb565b506060820151816003019080519060200190610de2929190611cdb565b5060808201518160040160006101000a81548160ff02191690831515021790555090505081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610e59929190611d61565b5060005b8251811015610f38576006838281518110610ea1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604051610eb6919061296f565b9081526020016040518091039020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610f3090612d98565b915050610e5d565b506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050949350505050565b6006828051602081018201805184825260208301602085012081835280955050505050508181548110610fda57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000905060005b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081101561114c5783604051602001611071919061296f565b60405160208183030381529060405280519060200120600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106110fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016040516020016111189190612986565b60405160208183030381529060405280519060200120141561113957600191505b808061114490612d98565b915050611016565b50801561118e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118590612a17565b60405180910390fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611206929190611cdb565b50600683604051611217919061296f565b9081526020016040518091039020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f890612a57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136890612b17565b60405180910390fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001905092915050565b6060600480548060200260200160405190810160405280929190818152602001828054801561149357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611449575b5050505050905090565b60606006826040516114af919061296f565b908152602001604051809103902080548060200260200160405190810160405280929190818152602001828054801561153d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114f3575b50505050509050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff169050919050565b6115aa611dc1565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806116d55750600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170b90612a97565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546117c490612d66565b80601f01602080910402602001604051908101604052809291908181526020018280546117f090612d66565b801561183d5780601f106118125761010080835404028352916020019161183d565b820191906000526020600020905b81548152906001019060200180831161182057829003601f168201915b5050505050815260200160028201805461185690612d66565b80601f016020809104026020016040519081016040528092919081815260200182805461188290612d66565b80156118cf5780601f106118a4576101008083540402835291602001916118cf565b820191906000526020600020905b8154815290600101906020018083116118b257829003601f168201915b505050505081526020016003820180546118e890612d66565b80601f016020809104026020016040519081016040528092919081815260200182805461191490612d66565b80156119615780601f1061193657610100808354040283529160200191611961565b820191906000526020600020905b81548152906001019060200180831161194457829003601f168201915b505050505081526020016004820160009054906101000a900460ff161515151581525050915050919050565b611995611dc1565b606082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611ac25750600073ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b611b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af890612a97565b60405180910390fd5b611b0a846115a2565b9250600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611c17578382906000526020600020018054611b8a90612d66565b80601f0160208091040260200160405190810160405280929190818152602001828054611bb690612d66565b8015611c035780601f10611bd857610100808354040283529160200191611c03565b820191906000526020600020905b815481529060010190602001808311611be657829003601f168201915b505050505081526020019060010190611b6b565b50505050915050915091565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054611ce790612d66565b90600052602060002090601f016020900481019282611d095760008555611d50565b82601f10611d2257805160ff1916838001178555611d50565b82800160010185558215611d50579182015b82811115611d4f578251825591602001919060010190611d34565b5b509050611d5d9190611e08565b5090565b828054828255906000526020600020908101928215611db0579160200282015b82811115611daf578251829080519060200190611d9f929190611cdb565b5091602001919060010190611d81565b5b509050611dbd9190611e25565b5090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016000151581525090565b5b80821115611e21576000816000905550600101611e09565b5090565b5b80821115611e455760008181611e3c9190611e49565b50600101611e26565b5090565b508054611e5590612d66565b6000825580601f10611e675750611e86565b601f016020900490600052602060002090810190611e859190611e08565b5b50565b6000611e9c611e9784612bc1565b612b90565b9050808382526020820190508260005b85811015611edc5781358501611ec28882611f78565b845260208401935060208301925050600181019050611eac565b5050509392505050565b6000611ef9611ef484612bed565b612b90565b905082815260208101848484011115611f1157600080fd5b611f1c848285612d24565b509392505050565b600081359050611f3381612e7f565b92915050565b600082601f830112611f4a57600080fd5b8135611f5a848260208601611e89565b91505092915050565b600081359050611f7281612e96565b92915050565b600082601f830112611f8957600080fd5b8135611f99848260208601611ee6565b91505092915050565b600081359050611fb181612ead565b92915050565b600060208284031215611fc957600080fd5b6000611fd784828501611f24565b91505092915050565b60008060408385031215611ff357600080fd5b600061200185828601611f24565b925050602061201285828601611f24565b9150509250929050565b60008060006060848603121561203157600080fd5b600061203f86828701611f24565b935050602061205086828701611f24565b925050604061206186828701611fa2565b9150509250925092565b6000806040838503121561207e57600080fd5b600061208c85828601611f24565b925050602061209d85828601611f63565b9150509250929050565b600080604083850312156120ba57600080fd5b60006120c885828601611f24565b92505060206120d985828601611fa2565b9150509250929050565b6000602082840312156120f557600080fd5b600082013567ffffffffffffffff81111561210f57600080fd5b61211b84828501611f78565b91505092915050565b60008060006060848603121561213957600080fd5b600084013567ffffffffffffffff81111561215357600080fd5b61215f86828701611f78565b935050602084013567ffffffffffffffff81111561217c57600080fd5b61218886828701611f78565b925050604084013567ffffffffffffffff8111156121a557600080fd5b6121b186828701611f78565b9150509250925092565b600080600080608085870312156121d157600080fd5b600085013567ffffffffffffffff8111156121eb57600080fd5b6121f787828801611f78565b945050602085013567ffffffffffffffff81111561221457600080fd5b61222087828801611f78565b935050604085013567ffffffffffffffff81111561223d57600080fd5b61224987828801611f78565b925050606085013567ffffffffffffffff81111561226657600080fd5b61227287828801611f39565b91505092959194509250565b6000806040838503121561229157600080fd5b600083013567ffffffffffffffff8111156122ab57600080fd5b6122b785828601611f78565b92505060206122c885828601611fa2565b9150509250929050565b60006122de83836122fe565b60208301905092915050565b60006122f6838361240d565b905092915050565b61230781612cdc565b82525050565b61231681612cdc565b82525050565b600061232782612c52565b6123318185612c8d565b935061233c83612c1d565b8060005b8381101561236d57815161235488826122d2565b975061235f83612c73565b925050600181019050612340565b5085935050505092915050565b600061238582612c5d565b61238f8185612c9e565b9350836020820285016123a185612c2d565b8060005b858110156123dd57848403895281516123be85826122ea565b94506123c983612c80565b925060208a019950506001810190506123a5565b50829750879550505050505092915050565b6123f881612cee565b82525050565b61240781612cee565b82525050565b600061241882612c68565b6124228185612caf565b9350612432818560208601612d33565b61243b81612e6e565b840191505092915050565b600061245182612c68565b61245b8185612cc0565b935061246b818560208601612d33565b61247481612e6e565b840191505092915050565b600061248a82612c68565b6124948185612cd1565b93506124a4818560208601612d33565b80840191505092915050565b600081546124bd81612d66565b6124c78186612cd1565b945060018216600081146124e257600181146124f357612526565b60ff19831686528186019350612526565b6124fc85612c3d565b60005b8381101561251e578154818901526001820191506020810190506124ff565b838801955050505b50505092915050565b600061253c603083612cc0565b91507f4661726d65723a3a61646452617750726f647563743a205261772070726f647560008301527f637420616c7265616479206164646564000000000000000000000000000000006020830152604082019050919050565b60006125a2603183612cc0565b91507f4661726d65723a3a72656769737465724661726d65723a204661726d6572206160008301527f6c726561647920726567697374657265640000000000000000000000000000006020830152604082019050919050565b6000612608603c83612cc0565b91507f5374616b65686f6c6465723a3a736574417070726f76616c466f72416c6c3a2060008301527f43616e6e6f742073657420617070726f76616c20666f722073656c66000000006020830152604082019050919050565b600061266e603a83612cc0565b91507f5374616b65686f6c6465723a3a7472616e7366657246726f6d3a2043616e6e6f60008301527f74207472616e7366657220746f206e756c6c20616464726573730000000000006020830152604082019050919050565b60006126d4602983612cc0565b91507f4f6e6c79207374616b65686f6c6465722063616e20616363657373207468697360008301527f2066756e6374696f6e00000000000000000000000000000000000000000000006020830152604082019050919050565b600061273a603283612cc0565b91507f5374616b65686f6c6465723a3a7472616e7366657246726f6d3a2043616e6e6f60008301527f74207472616e7366657220746f2073656c6600000000000000000000000000006020830152604082019050919050565b60006127a0603583612cc0565b91507f5374616b65686f6c6465723a3a72656769737465723a205374616b65686f6c6460008301527f657220616c7265616479207265676973746572656400000000000000000000006020830152604082019050919050565b6000612806602f83612cc0565b91507f4f6e6c79206f776e6572206f7220617070726f7665642063616e20616363657360008301527f7320746869732066756e6374696f6e00000000000000000000000000000000006020830152604082019050919050565b600061286c604483612cc0565b91507f5374616b65686f6c6465723a3a736574417070726f76616c466f72416c6c3a2060008301527f43616e6e6f742073657420617070726f76616c20666f72206e756c6c2061646460208301527f72657373000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b600060a08301600083015161290360008601826122fe565b506020830151848203602086015261291b828261240d565b91505060408301518482036040860152612935828261240d565b9150506060830151848203606086015261294f828261240d565b915050608083015161296460808601826123ef565b508091505092915050565b600061297b828461247f565b915081905092915050565b600061299282846124b0565b915081905092915050565b60006020820190506129b2600083018461230d565b92915050565b600060208201905081810360008301526129d2818461231c565b905092915050565b60006020820190506129ef60008301846123fe565b92915050565b60006020820190508181036000830152612a0f8184612446565b905092915050565b60006020820190508181036000830152612a308161252f565b9050919050565b60006020820190508181036000830152612a5081612595565b9050919050565b60006020820190508181036000830152612a70816125fb565b9050919050565b60006020820190508181036000830152612a9081612661565b9050919050565b60006020820190508181036000830152612ab0816126c7565b9050919050565b60006020820190508181036000830152612ad08161272d565b9050919050565b60006020820190508181036000830152612af081612793565b9050919050565b60006020820190508181036000830152612b10816127f9565b9050919050565b60006020820190508181036000830152612b308161285f565b9050919050565b60006020820190508181036000830152612b5181846128eb565b905092915050565b60006040820190508181036000830152612b7381856128eb565b90508181036020830152612b87818461237a565b90509392505050565b6000604051905081810181811067ffffffffffffffff82111715612bb757612bb6612e3f565b5b8060405250919050565b600067ffffffffffffffff821115612bdc57612bdb612e3f565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612c0857612c07612e3f565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612ce782612cfa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612d51578082015181840152602081019050612d36565b83811115612d60576000848401525b50505050565b60006002820490506001821680612d7e57607f821691505b60208210811415612d9257612d91612e10565b5b50919050565b6000612da382612d1a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612dd657612dd5612de1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612e8881612cdc565b8114612e9357600080fd5b50565b612e9f81612cee565b8114612eaa57600080fd5b50565b612eb681612d1a565b8114612ec157600080fd5b5056fea264697066735822122001183253cd54ca15948cc060b849edc85d4e7af9bad4e135ea97c4407d5d88f764736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "91:1737:1:-:0;;;243:30;;;;;;;;;;489:10:5;149:6:0;141:5;;:14;;;;;;;;;;;;;;;;;;108:52;91:1737:1;;;;;;",
  "deployedSourceMap": "91:1737:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:472:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;164:96:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2322:106:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;506:402;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;126:54:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:124:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;277:602:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;184:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:572;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1040:398:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2432:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:145:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2212:106:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;914:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1459:217:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1442:162:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;81:20:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1608:472:5;1757:4;1729:5;1736:10;2819:28;2850;:35;2879:5;2850:35;;;;;;;;;;;;;;;:47;2886:10;2850:47;;;;;;;;;;;;;;;;;;;;;2819:78;;2903:31;2937:35;2954:5;2961:10;2937:16;:35::i;:::-;:58;;;;2990:5;2976:19;;:10;:19;;;2937:58;2903:92;;3011:23;:53;;;;;3038:26;3011:53;3002:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;1786:3:::1;1777:12;;:5;:12;;;;1768:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1874:1;1859:17;;:3;:17;;;;1850:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;1995:5;1945:28;:35;1974:5;1945:35;;;;;;;;;;;;;;;:47;1981:10;1945:47;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;2054:4;2006:28;:33;2035:3;2006:33;;;;;;;;;;;;;;;:45;2040:10;2006:45;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;2071:4;2064:11;;1608:472:::0;;;;;;;;;:::o;164:96:0:-;220:4;250:5;;;;;;;;;;;238:17;;:8;:17;;;231:24;;164:96;;;:::o;2322:106:5:-;2373:13;2400;:18;2414:3;2400:18;;;;;;;;;;;;;;;:23;;2393:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:106;;;:::o;506:402::-;631:4;693:1;652:43;;:13;:25;666:10;652:25;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:43;;;643:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;787:55;;;;;;;;799:10;787:55;;;;;;811:5;787:55;;;;818:9;787:55;;;;829:5;787:55;;;;836:5;787:55;;;;;759:13;:25;773:10;759:25;;;;;;;;;;;;;;;:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:21;875:10;848:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;899:4;892:11;;506:402;;;;;:::o;126:54:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2084:124:5:-;2139:4;312:5:0;;;;;;;;;;;298:19;;:10;:19;;;290:28;;;;;;2182:4:5::1;2150:13:::0;:18:::1;2164:3;2150:18;;;;;;;;;;;;;;;:29;;;:36;;;;;;;;;;;;;;;;;;2199:4;2192:11;;2084:124:::0;;;:::o;277:602:1:-;436:4;498:1;457:43;;:13;:25;471:10;457:25;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:43;;;448:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;588:55;;;;;;;;600:10;588:55;;;;;;612:5;588:55;;;;619:9;588:55;;;;630:5;588:55;;;;637:5;588:55;;;;;560:13;:25;574:10;560:25;;;;;;;;;;;;;;;:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:12;649:18;:30;668:10;649:30;;;;;;;;;;;;;;;:45;;;;;;;;;;;;:::i;:::-;;705:6;700:114;721:12;:19;717:1;:23;700:114;;;755:18;774:12;787:1;774:15;;;;;;;;;;;;;;;;;;;;;;755:35;;;;;;:::i;:::-;;;;;;;;;;;;;796:10;755:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:3;;;;;:::i;:::-;;;;700:114;;;;819:21;846:10;819:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:4;863:11;;277:602;;;;;;:::o;184:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;883:572::-;949:4;961:24;988:5;961:32;;1004:6;999:240;1020:18;:30;1039:10;1020:30;;;;;;;;;;;;;;;:37;;;;1016:1;:41;999:240;;;1172:11;1154:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;1144:42;;;;;;1104:18;:30;1123:10;1104:30;;;;;;;;;;;;;;;1135:1;1104:33;;;;;;;;;;;;;;;;;;;;;;;1086:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;1076:64;;;;;;:110;1072:161;;;1220:4;1198:26;;1072:161;1059:3;;;;;:::i;:::-;;;;999:240;;;;1253:19;1252:20;1244:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1331:18;:30;1350:10;1331:30;;;;;;;;;;;;;;;1367:11;1331:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1385:18;1404:11;1385:31;;;;;;:::i;:::-;;;;;;;;;;;;;1422:10;1385:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:4;1439:11;;;883:572;;;:::o;1040:398:5:-;1138:4;1172:9;1158:23;;:10;:23;;;;1149:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1282:1;1261:23;;:9;:23;;;;1252:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;1407:9;1363:18;:30;1382:10;1363:30;;;;;;;;;;;;;;;:41;1394:9;1363:41;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;1429:4;1422:11;;1040:398;;;;:::o;2432:101::-;2477:16;2507:21;2500:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2432:101;:::o;1680:145:1:-;1758:16;1789:18;1808:11;1789:31;;;;;;:::i;:::-;;;;;;;;;;;;;1782:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1680:145;;;:::o;2212:106:5:-;2266:4;2284:13;:18;2298:3;2284:18;;;;;;;;;;;;;;;:29;;;;;;;;;;;;2277:36;;2212:106;;;:::o;914:122::-;981:18;;:::i;:::-;968:3;2602:13;:25;2616:10;2602:25;;;;;;;;;;;;;;;:28;;;;;;;;;;;;2595:35;;:3;:35;;;:81;;;;2674:1;2634:42;;:13;:25;2648:10;2634:25;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:42;;;2595:81;2580:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;1013:13:::1;:18;1027:3;1013:18;;;;;;;;;;;;;;;1006:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;914:122:::0;;;;:::o;1459:217:1:-;1537:25;;:::i;:::-;1568:27;1519:3;2602:13:5;:25;2616:10;2602:25;;;;;;;;;;;;;;;:28;;;;;;;;;;;;2595:35;;:3;:35;;;:81;;;;2674:1;2634:42;;:13;:25;2648:10;2634:25;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:42;;;2595:81;2580:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;1614:14:1::1;1624:3;1614:9;:14::i;:::-;1605:23;;1648:18;:23;1667:3;1648:23;;;;;;;;;;;;;;;1634:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:217:::0;;;;:::o;1442:162:5:-;1544:4;1562:18;:26;1581:6;1562:26;;;;;;;;;;;;;;;:37;1589:9;1562:37;;;;;;;;;;;;;;;;;;;;;;;;;1555:44;;1442:162;;;;:::o;81:20:0:-;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;23:615:6:-;;154:90;169:74;236:6;169:74;:::i;:::-;154:90;:::i;:::-;145:99;;264:5;292:6;285:5;278:21;318:4;311:5;307:16;300:23;;343:6;374:1;359:273;384:6;381:1;378:13;359:273;;;476:3;463:17;455:6;451:30;506:47;549:3;537:10;506:47;:::i;:::-;501:3;494:60;583:4;578:3;574:14;567:21;;617:4;612:3;608:14;601:21;;419:213;406:1;403;399:9;394:14;;359:273;;;363:14;135:503;;;;;;;:::o;644:344::-;;747:65;762:49;804:6;762:49;:::i;:::-;747:65;:::i;:::-;738:74;;835:6;828:5;821:21;873:4;866:5;862:16;911:3;902:6;897:3;893:16;890:25;887:2;;;928:1;925;918:12;887:2;941:41;975:6;970:3;965;941:41;:::i;:::-;728:260;;;;;;:::o;994:139::-;;1078:6;1065:20;1056:29;;1094:33;1121:5;1094:33;:::i;:::-;1046:87;;;;:::o;1155:323::-;;1285:3;1278:4;1270:6;1266:17;1262:27;1252:2;;1303:1;1300;1293:12;1252:2;1343:6;1330:20;1368:104;1468:3;1460:6;1453:4;1445:6;1441:17;1368:104;:::i;:::-;1359:113;;1242:236;;;;;:::o;1484:133::-;;1565:6;1552:20;1543:29;;1581:30;1605:5;1581:30;:::i;:::-;1533:84;;;;:::o;1637:273::-;;1742:3;1735:4;1727:6;1723:17;1719:27;1709:2;;1760:1;1757;1750:12;1709:2;1800:6;1787:20;1825:79;1900:3;1892:6;1885:4;1877:6;1873:17;1825:79;:::i;:::-;1816:88;;1699:211;;;;;:::o;1916:139::-;;2000:6;1987:20;1978:29;;2016:33;2043:5;2016:33;:::i;:::-;1968:87;;;;:::o;2061:262::-;;2169:2;2157:9;2148:7;2144:23;2140:32;2137:2;;;2185:1;2182;2175:12;2137:2;2228:1;2253:53;2298:7;2289:6;2278:9;2274:22;2253:53;:::i;:::-;2243:63;;2199:117;2127:196;;;;:::o;2329:407::-;;;2454:2;2442:9;2433:7;2429:23;2425:32;2422:2;;;2470:1;2467;2460:12;2422:2;2513:1;2538:53;2583:7;2574:6;2563:9;2559:22;2538:53;:::i;:::-;2528:63;;2484:117;2640:2;2666:53;2711:7;2702:6;2691:9;2687:22;2666:53;:::i;:::-;2656:63;;2611:118;2412:324;;;;;:::o;2742:552::-;;;;2884:2;2872:9;2863:7;2859:23;2855:32;2852:2;;;2900:1;2897;2890:12;2852:2;2943:1;2968:53;3013:7;3004:6;2993:9;2989:22;2968:53;:::i;:::-;2958:63;;2914:117;3070:2;3096:53;3141:7;3132:6;3121:9;3117:22;3096:53;:::i;:::-;3086:63;;3041:118;3198:2;3224:53;3269:7;3260:6;3249:9;3245:22;3224:53;:::i;:::-;3214:63;;3169:118;2842:452;;;;;:::o;3300:401::-;;;3422:2;3410:9;3401:7;3397:23;3393:32;3390:2;;;3438:1;3435;3428:12;3390:2;3481:1;3506:53;3551:7;3542:6;3531:9;3527:22;3506:53;:::i;:::-;3496:63;;3452:117;3608:2;3634:50;3676:7;3667:6;3656:9;3652:22;3634:50;:::i;:::-;3624:60;;3579:115;3380:321;;;;;:::o;3707:407::-;;;3832:2;3820:9;3811:7;3807:23;3803:32;3800:2;;;3848:1;3845;3838:12;3800:2;3891:1;3916:53;3961:7;3952:6;3941:9;3937:22;3916:53;:::i;:::-;3906:63;;3862:117;4018:2;4044:53;4089:7;4080:6;4069:9;4065:22;4044:53;:::i;:::-;4034:63;;3989:118;3790:324;;;;;:::o;4120:375::-;;4238:2;4226:9;4217:7;4213:23;4209:32;4206:2;;;4254:1;4251;4244:12;4206:2;4325:1;4314:9;4310:17;4297:31;4355:18;4347:6;4344:30;4341:2;;;4387:1;4384;4377:12;4341:2;4415:63;4470:7;4461:6;4450:9;4446:22;4415:63;:::i;:::-;4405:73;;4268:220;4196:299;;;;:::o;4501:891::-;;;;4673:2;4661:9;4652:7;4648:23;4644:32;4641:2;;;4689:1;4686;4679:12;4641:2;4760:1;4749:9;4745:17;4732:31;4790:18;4782:6;4779:30;4776:2;;;4822:1;4819;4812:12;4776:2;4850:63;4905:7;4896:6;4885:9;4881:22;4850:63;:::i;:::-;4840:73;;4703:220;4990:2;4979:9;4975:18;4962:32;5021:18;5013:6;5010:30;5007:2;;;5053:1;5050;5043:12;5007:2;5081:63;5136:7;5127:6;5116:9;5112:22;5081:63;:::i;:::-;5071:73;;4933:221;5221:2;5210:9;5206:18;5193:32;5252:18;5244:6;5241:30;5238:2;;;5284:1;5281;5274:12;5238:2;5312:63;5367:7;5358:6;5347:9;5343:22;5312:63;:::i;:::-;5302:73;;5164:221;4631:761;;;;;:::o;5398:1200::-;;;;;5622:3;5610:9;5601:7;5597:23;5593:33;5590:2;;;5639:1;5636;5629:12;5590:2;5710:1;5699:9;5695:17;5682:31;5740:18;5732:6;5729:30;5726:2;;;5772:1;5769;5762:12;5726:2;5800:63;5855:7;5846:6;5835:9;5831:22;5800:63;:::i;:::-;5790:73;;5653:220;5940:2;5929:9;5925:18;5912:32;5971:18;5963:6;5960:30;5957:2;;;6003:1;6000;5993:12;5957:2;6031:63;6086:7;6077:6;6066:9;6062:22;6031:63;:::i;:::-;6021:73;;5883:221;6171:2;6160:9;6156:18;6143:32;6202:18;6194:6;6191:30;6188:2;;;6234:1;6231;6224:12;6188:2;6262:63;6317:7;6308:6;6297:9;6293:22;6262:63;:::i;:::-;6252:73;;6114:221;6402:2;6391:9;6387:18;6374:32;6433:18;6425:6;6422:30;6419:2;;;6465:1;6462;6455:12;6419:2;6493:88;6573:7;6564:6;6553:9;6549:22;6493:88;:::i;:::-;6483:98;;6345:246;5580:1018;;;;;;;:::o;6604:520::-;;;6739:2;6727:9;6718:7;6714:23;6710:32;6707:2;;;6755:1;6752;6745:12;6707:2;6826:1;6815:9;6811:17;6798:31;6856:18;6848:6;6845:30;6842:2;;;6888:1;6885;6878:12;6842:2;6916:63;6971:7;6962:6;6951:9;6947:22;6916:63;:::i;:::-;6906:73;;6769:220;7028:2;7054:53;7099:7;7090:6;7079:9;7075:22;7054:53;:::i;:::-;7044:63;;6999:118;6697:427;;;;;:::o;7130:179::-;;7220:46;7262:3;7254:6;7220:46;:::i;:::-;7298:4;7293:3;7289:14;7275:28;;7210:99;;;;:::o;7315:196::-;;7439:66;7501:3;7493:6;7439:66;:::i;:::-;7425:80;;7415:96;;;;:::o;7517:108::-;7594:24;7612:5;7594:24;:::i;:::-;7589:3;7582:37;7572:53;;:::o;7631:118::-;7718:24;7736:5;7718:24;:::i;:::-;7713:3;7706:37;7696:53;;:::o;7785:732::-;;7933:54;7981:5;7933:54;:::i;:::-;8003:86;8082:6;8077:3;8003:86;:::i;:::-;7996:93;;8113:56;8163:5;8113:56;:::i;:::-;8192:7;8223:1;8208:284;8233:6;8230:1;8227:13;8208:284;;;8309:6;8303:13;8336:63;8395:3;8380:13;8336:63;:::i;:::-;8329:70;;8422:60;8475:6;8422:60;:::i;:::-;8412:70;;8268:224;8255:1;8252;8248:9;8243:14;;8208:284;;;8212:14;8508:3;8501:10;;7909:608;;;;;;;:::o;8551:991::-;;8719:64;8777:5;8719:64;:::i;:::-;8799:96;8888:6;8883:3;8799:96;:::i;:::-;8792:103;;8921:3;8966:4;8958:6;8954:17;8949:3;8945:27;8996:66;9056:5;8996:66;:::i;:::-;9085:7;9116:1;9101:396;9126:6;9123:1;9120:13;9101:396;;;9197:9;9191:4;9187:20;9182:3;9175:33;9248:6;9242:13;9276:84;9355:4;9340:13;9276:84;:::i;:::-;9268:92;;9383:70;9446:6;9383:70;:::i;:::-;9373:80;;9482:4;9477:3;9473:14;9466:21;;9161:336;9148:1;9145;9141:9;9136:14;;9101:396;;;9105:14;9513:4;9506:11;;9533:3;9526:10;;8695:847;;;;;;;;;:::o;9548:99::-;9619:21;9634:5;9619:21;:::i;:::-;9614:3;9607:34;9597:50;;:::o;9653:109::-;9734:21;9749:5;9734:21;:::i;:::-;9729:3;9722:34;9712:50;;:::o;9768:344::-;;9874:39;9907:5;9874:39;:::i;:::-;9929:61;9983:6;9978:3;9929:61;:::i;:::-;9922:68;;9999:52;10044:6;10039:3;10032:4;10025:5;10021:16;9999:52;:::i;:::-;10076:29;10098:6;10076:29;:::i;:::-;10071:3;10067:39;10060:46;;9850:262;;;;;:::o;10118:364::-;;10234:39;10267:5;10234:39;:::i;:::-;10289:71;10353:6;10348:3;10289:71;:::i;:::-;10282:78;;10369:52;10414:6;10409:3;10402:4;10395:5;10391:16;10369:52;:::i;:::-;10446:29;10468:6;10446:29;:::i;:::-;10441:3;10437:39;10430:46;;10210:272;;;;;:::o;10488:377::-;;10622:39;10655:5;10622:39;:::i;:::-;10677:89;10759:6;10754:3;10677:89;:::i;:::-;10670:96;;10775:52;10820:6;10815:3;10808:4;10801:5;10797:16;10775:52;:::i;:::-;10852:6;10847:3;10843:16;10836:23;;10598:267;;;;;:::o;10895:845::-;;11035:5;11029:12;11064:36;11090:9;11064:36;:::i;:::-;11116:89;11198:6;11193:3;11116:89;:::i;:::-;11109:96;;11236:1;11225:9;11221:17;11252:1;11247:137;;;;11398:1;11393:341;;;;11214:520;;11247:137;11331:4;11327:9;11316;11312:25;11307:3;11300:38;11367:6;11362:3;11358:16;11351:23;;11247:137;;11393:341;11460:38;11492:5;11460:38;:::i;:::-;11520:1;11534:154;11548:6;11545:1;11542:13;11534:154;;;11622:7;11616:14;11612:1;11607:3;11603:11;11596:35;11672:1;11663:7;11659:15;11648:26;;11570:4;11567:1;11563:12;11558:17;;11534:154;;;11717:6;11712:3;11708:16;11701:23;;11400:334;;11214:520;;11002:738;;;;;;:::o;11746:380::-;;11909:67;11973:2;11968:3;11909:67;:::i;:::-;11902:74;;12006:34;12002:1;11997:3;11993:11;11986:55;12072:18;12067:2;12062:3;12058:12;12051:40;12117:2;12112:3;12108:12;12101:19;;11892:234;;;:::o;12132:381::-;;12295:67;12359:2;12354:3;12295:67;:::i;:::-;12288:74;;12392:34;12388:1;12383:3;12379:11;12372:55;12458:19;12453:2;12448:3;12444:12;12437:41;12504:2;12499:3;12495:12;12488:19;;12278:235;;;:::o;12519:392::-;;12682:67;12746:2;12741:3;12682:67;:::i;:::-;12675:74;;12779:34;12775:1;12770:3;12766:11;12759:55;12845:30;12840:2;12835:3;12831:12;12824:52;12902:2;12897:3;12893:12;12886:19;;12665:246;;;:::o;12917:390::-;;13080:67;13144:2;13139:3;13080:67;:::i;:::-;13073:74;;13177:34;13173:1;13168:3;13164:11;13157:55;13243:28;13238:2;13233:3;13229:12;13222:50;13298:2;13293:3;13289:12;13282:19;;13063:244;;;:::o;13313:373::-;;13476:67;13540:2;13535:3;13476:67;:::i;:::-;13469:74;;13573:34;13569:1;13564:3;13560:11;13553:55;13639:11;13634:2;13629:3;13625:12;13618:33;13677:2;13672:3;13668:12;13661:19;;13459:227;;;:::o;13692:382::-;;13855:67;13919:2;13914:3;13855:67;:::i;:::-;13848:74;;13952:34;13948:1;13943:3;13939:11;13932:55;14018:20;14013:2;14008:3;14004:12;13997:42;14065:2;14060:3;14056:12;14049:19;;13838:236;;;:::o;14080:385::-;;14243:67;14307:2;14302:3;14243:67;:::i;:::-;14236:74;;14340:34;14336:1;14331:3;14327:11;14320:55;14406:23;14401:2;14396:3;14392:12;14385:45;14456:2;14451:3;14447:12;14440:19;;14226:239;;;:::o;14471:379::-;;14634:67;14698:2;14693:3;14634:67;:::i;:::-;14627:74;;14731:34;14727:1;14722:3;14718:11;14711:55;14797:17;14792:2;14787:3;14783:12;14776:39;14841:2;14836:3;14832:12;14825:19;;14617:233;;;:::o;14856:434::-;;15019:67;15083:2;15078:3;15019:67;:::i;:::-;15012:74;;15116:34;15112:1;15107:3;15103:11;15096:55;15182:34;15177:2;15172:3;15168:12;15161:56;15248:6;15243:2;15238:3;15234:12;15227:28;15281:2;15276:3;15272:12;15265:19;;15002:288;;;:::o;15368:1280::-;;15531:4;15526:3;15522:14;15616:4;15609:5;15605:16;15599:23;15635:63;15692:4;15687:3;15683:14;15669:12;15635:63;:::i;:::-;15546:162;15790:4;15783:5;15779:16;15773:23;15843:3;15837:4;15833:14;15826:4;15821:3;15817:14;15810:38;15869:73;15937:4;15923:12;15869:73;:::i;:::-;15861:81;;15718:235;16039:4;16032:5;16028:16;16022:23;16092:3;16086:4;16082:14;16075:4;16070:3;16066:14;16059:38;16118:73;16186:4;16172:12;16118:73;:::i;:::-;16110:81;;15963:239;16284:4;16277:5;16273:16;16267:23;16337:3;16331:4;16327:14;16320:4;16315:3;16311:14;16304:38;16363:73;16431:4;16417:12;16363:73;:::i;:::-;16355:81;;16212:235;16535:4;16528:5;16524:16;16518:23;16554:57;16605:4;16600:3;16596:14;16582:12;16554:57;:::i;:::-;16457:164;16638:4;16631:11;;15500:1148;;;;;:::o;16654:275::-;;16808:95;16899:3;16890:6;16808:95;:::i;:::-;16801:102;;16920:3;16913:10;;16790:139;;;;:::o;16935:269::-;;17086:92;17174:3;17165:6;17086:92;:::i;:::-;17079:99;;17195:3;17188:10;;17068:136;;;;:::o;17210:222::-;;17341:2;17330:9;17326:18;17318:26;;17354:71;17422:1;17411:9;17407:17;17398:6;17354:71;:::i;:::-;17308:124;;;;:::o;17438:373::-;;17619:2;17608:9;17604:18;17596:26;;17668:9;17662:4;17658:20;17654:1;17643:9;17639:17;17632:47;17696:108;17799:4;17790:6;17696:108;:::i;:::-;17688:116;;17586:225;;;;:::o;17817:210::-;;17942:2;17931:9;17927:18;17919:26;;17955:65;18017:1;18006:9;18002:17;17993:6;17955:65;:::i;:::-;17909:118;;;;:::o;18033:313::-;;18184:2;18173:9;18169:18;18161:26;;18233:9;18227:4;18223:20;18219:1;18208:9;18204:17;18197:47;18261:78;18334:4;18325:6;18261:78;:::i;:::-;18253:86;;18151:195;;;;:::o;18352:419::-;;18556:2;18545:9;18541:18;18533:26;;18605:9;18599:4;18595:20;18591:1;18580:9;18576:17;18569:47;18633:131;18759:4;18633:131;:::i;:::-;18625:139;;18523:248;;;:::o;18777:419::-;;18981:2;18970:9;18966:18;18958:26;;19030:9;19024:4;19020:20;19016:1;19005:9;19001:17;18994:47;19058:131;19184:4;19058:131;:::i;:::-;19050:139;;18948:248;;;:::o;19202:419::-;;19406:2;19395:9;19391:18;19383:26;;19455:9;19449:4;19445:20;19441:1;19430:9;19426:17;19419:47;19483:131;19609:4;19483:131;:::i;:::-;19475:139;;19373:248;;;:::o;19627:419::-;;19831:2;19820:9;19816:18;19808:26;;19880:9;19874:4;19870:20;19866:1;19855:9;19851:17;19844:47;19908:131;20034:4;19908:131;:::i;:::-;19900:139;;19798:248;;;:::o;20052:419::-;;20256:2;20245:9;20241:18;20233:26;;20305:9;20299:4;20295:20;20291:1;20280:9;20276:17;20269:47;20333:131;20459:4;20333:131;:::i;:::-;20325:139;;20223:248;;;:::o;20477:419::-;;20681:2;20670:9;20666:18;20658:26;;20730:9;20724:4;20720:20;20716:1;20705:9;20701:17;20694:47;20758:131;20884:4;20758:131;:::i;:::-;20750:139;;20648:248;;;:::o;20902:419::-;;21106:2;21095:9;21091:18;21083:26;;21155:9;21149:4;21145:20;21141:1;21130:9;21126:17;21119:47;21183:131;21309:4;21183:131;:::i;:::-;21175:139;;21073:248;;;:::o;21327:419::-;;21531:2;21520:9;21516:18;21508:26;;21580:9;21574:4;21570:20;21566:1;21555:9;21551:17;21544:47;21608:131;21734:4;21608:131;:::i;:::-;21600:139;;21498:248;;;:::o;21752:419::-;;21956:2;21945:9;21941:18;21933:26;;22005:9;21999:4;21995:20;21991:1;21980:9;21976:17;21969:47;22033:131;22159:4;22033:131;:::i;:::-;22025:139;;21923:248;;;:::o;22177:389::-;;22366:2;22355:9;22351:18;22343:26;;22415:9;22409:4;22405:20;22401:1;22390:9;22386:17;22379:47;22443:116;22554:4;22545:6;22443:116;:::i;:::-;22435:124;;22333:233;;;;:::o;22572:690::-;;22859:2;22848:9;22844:18;22836:26;;22908:9;22902:4;22898:20;22894:1;22883:9;22879:17;22872:47;22936:116;23047:4;23038:6;22936:116;:::i;:::-;22928:124;;23099:9;23093:4;23089:20;23084:2;23073:9;23069:18;23062:48;23127:128;23250:4;23241:6;23127:128;:::i;:::-;23119:136;;22826:436;;;;;:::o;23268:283::-;;23334:2;23328:9;23318:19;;23376:4;23368:6;23364:17;23483:6;23471:10;23468:22;23447:18;23435:10;23432:34;23429:62;23426:2;;;23494:18;;:::i;:::-;23426:2;23534:10;23530:2;23523:22;23308:243;;;;:::o;23557:321::-;;23734:18;23726:6;23723:30;23720:2;;;23756:18;;:::i;:::-;23720:2;23806:4;23798:6;23794:17;23786:25;;23866:4;23860;23856:15;23848:23;;23649:229;;;:::o;23884:332::-;;24036:18;24028:6;24025:30;24022:2;;;24058:18;;:::i;:::-;24022:2;24143:4;24139:9;24132:4;24124:6;24120:17;24116:33;24108:41;;24204:4;24198;24194:15;24186:23;;23951:265;;;:::o;24222:132::-;;24312:3;24304:11;;24342:4;24337:3;24333:14;24325:22;;24294:60;;;:::o;24360:142::-;;24460:3;24452:11;;24490:4;24485:3;24481:14;24473:22;;24442:60;;;:::o;24508:141::-;;24580:3;24572:11;;24603:3;24600:1;24593:14;24637:4;24634:1;24624:18;24616:26;;24562:87;;;:::o;24655:114::-;;24756:5;24750:12;24740:22;;24729:40;;;:::o;24775:124::-;;24886:5;24880:12;24870:22;;24859:40;;;:::o;24905:99::-;;24991:5;24985:12;24975:22;;24964:40;;;:::o;25010:113::-;;25112:4;25107:3;25103:14;25095:22;;25085:38;;;:::o;25129:123::-;;25241:4;25236:3;25232:14;25224:22;;25214:38;;;:::o;25258:184::-;;25391:6;25386:3;25379:19;25431:4;25426:3;25422:14;25407:29;;25369:73;;;;:::o;25448:194::-;;25591:6;25586:3;25579:19;25631:4;25626:3;25622:14;25607:29;;25569:73;;;;:::o;25648:159::-;;25756:6;25751:3;25744:19;25796:4;25791:3;25787:14;25772:29;;25734:73;;;;:::o;25813:169::-;;25931:6;25926:3;25919:19;25971:4;25966:3;25962:14;25947:29;;25909:73;;;;:::o;25988:148::-;;26127:3;26112:18;;26102:34;;;;:::o;26142:96::-;;26208:24;26226:5;26208:24;:::i;:::-;26197:35;;26187:51;;;:::o;26244:90::-;;26321:5;26314:13;26307:21;26296:32;;26286:48;;;:::o;26340:126::-;;26417:42;26410:5;26406:54;26395:65;;26385:81;;;:::o;26472:77::-;;26538:5;26527:16;;26517:32;;;:::o;26555:154::-;26639:6;26634:3;26629;26616:30;26701:1;26692:6;26687:3;26683:16;26676:27;26606:103;;;:::o;26715:307::-;26783:1;26793:113;26807:6;26804:1;26801:13;26793:113;;;26892:1;26887:3;26883:11;26877:18;26873:1;26868:3;26864:11;26857:39;26829:2;26826:1;26822:10;26817:15;;26793:113;;;26924:6;26921:1;26918:13;26915:2;;;27004:1;26995:6;26990:3;26986:16;26979:27;26915:2;26764:258;;;;:::o;27028:320::-;;27109:1;27103:4;27099:12;27089:22;;27156:1;27150:4;27146:12;27177:18;27167:2;;27233:4;27225:6;27221:17;27211:27;;27167:2;27295;27287:6;27284:14;27264:18;27261:38;27258:2;;;27314:18;;:::i;:::-;27258:2;27079:269;;;;:::o;27354:233::-;;27416:24;27434:5;27416:24;:::i;:::-;27407:33;;27462:66;27455:5;27452:77;27449:2;;;27532:18;;:::i;:::-;27449:2;27579:1;27572:5;27568:13;27561:20;;27397:190;;;:::o;27593:180::-;27641:77;27638:1;27631:88;27738:4;27735:1;27728:15;27762:4;27759:1;27752:15;27779:180;27827:77;27824:1;27817:88;27924:4;27921:1;27914:15;27948:4;27945:1;27938:15;27965:180;28013:77;28010:1;28003:88;28110:4;28107:1;28100:15;28134:4;28131:1;28124:15;28151:102;;28243:2;28239:7;28234:2;28227:5;28223:14;28219:28;28209:38;;28199:54;;;:::o;28259:122::-;28332:24;28350:5;28332:24;:::i;:::-;28325:5;28322:35;28312:2;;28371:1;28368;28361:12;28312:2;28302:79;:::o;28387:116::-;28457:21;28472:5;28457:21;:::i;:::-;28450:5;28447:32;28437:2;;28493:1;28490;28483:12;28437:2;28427:76;:::o;28509:122::-;28582:24;28600:5;28582:24;:::i;:::-;28575:5;28572:35;28562:2;;28621:1;28618;28611:12;28562:2;28552:79;:::o",
  "source": "// SPDX-License-Identifier: Unlicensed\npragma solidity ^0.8.0;\nimport './Stakeholder.sol';\ncontract Farmer is Stakeholder {\n  mapping(address => string[]) public _farmerRawProducts;\n  mapping(string => address[]) public _rawProductFarmers;\n\n  constructor() Stakeholder() {}\n\n  function registerFarmer(\n    string memory _name, \n    string memory _location, \n    string memory _role,\n    string[] memory _rawProducts\n  ) public returns (bool) {\n    require (_stakeholders[msg.sender].id ==  address(0), \"Farmer::registerFarmer: Farmer already registered\");\n    _stakeholders[msg.sender] = stakeholder(msg.sender, _name, _location, _role, false);\n    _farmerRawProducts[msg.sender] = _rawProducts;\n    for (uint i = 0; i < _rawProducts.length; i++) {\n      _rawProductFarmers[_rawProducts[i]].push(msg.sender);\n    }\n    _stakeholderAddresses.push(msg.sender);\n    return true;\n  }\n\n  function addRawProduct(string memory _rawProduct) public returns (bool) {\n    bool productAlreadyAdded = false;\n    for (uint i = 0; i < _farmerRawProducts[msg.sender].length; i++) {\n      if (keccak256(abi.encodePacked((_farmerRawProducts[msg.sender][i]))) == keccak256(abi.encodePacked((_rawProduct)))) {\n        productAlreadyAdded = true;\n      }\n    }\n    require(!productAlreadyAdded, \"Farmer::addRawProduct: Raw product already added\");\n    _farmerRawProducts[msg.sender].push(_rawProduct);\n    _rawProductFarmers[_rawProduct].push(msg.sender);\n    return true;\n  }\n\n  function getFarmer(address _id) public view onlyStakeholder(_id) returns(\n    stakeholder memory farmer,\n    string[] memory rawProducts\n  ){\n    farmer = super.get(_id);\n    rawProducts = _farmerRawProducts[_id];\n  }\n\n  function getRawProductFarmers(string memory _rawProduct) public view returns (address[] memory) {\n    return _rawProductFarmers[_rawProduct];\n  }\n\n}",
  "sourcePath": "D:\\MIT Academy of Engineering\\Major Project\\Major_Project_Code\\supply-chain-dev\\src\\Smart-Contract\\Contracts\\Farmer.sol",
  "ast": {
    "absolutePath": "/D/MIT Academy of Engineering/Major Project/Major_Project_Code/supply-chain-dev/src/Smart-Contract/Contracts/Farmer.sol",
    "exportedSymbols": {
      "Admin": [
        37
      ],
      "Farmer": [
        260
      ],
      "Stakeholder": [
        1636
      ]
    },
    "id": 261,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 39,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:1"
      },
      {
        "absolutePath": "/D/MIT Academy of Engineering/Major Project/Major_Project_Code/supply-chain-dev/src/Smart-Contract/Contracts/Stakeholder.sol",
        "file": "./Stakeholder.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 261,
        "sourceUnit": 1637,
        "src": "63:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41,
              "name": "Stakeholder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1636,
              "src": "110:11:1"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "110:11:1"
          }
        ],
        "contractDependencies": [
          37,
          1636
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 260,
        "linearizedBaseContracts": [
          260,
          1636,
          37
        ],
        "name": "Farmer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "518cc0b3",
            "id": 47,
            "mutability": "mutable",
            "name": "_farmerRawProducts",
            "nodeType": "VariableDeclaration",
            "scope": 260,
            "src": "126:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
              "typeString": "mapping(address => string[])"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "134:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "126:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                "typeString": "mapping(address => string[])"
              },
              "valueType": {
                "baseType": {
                  "id": 44,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "145:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 45,
                "nodeType": "ArrayTypeName",
                "src": "145:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8531358f",
            "id": 52,
            "mutability": "mutable",
            "name": "_rawProductFarmers",
            "nodeType": "VariableDeclaration",
            "scope": 260,
            "src": "184:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(string => address[])"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 48,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "192:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "184:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(string => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 49,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "202:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 50,
                "nodeType": "ArrayTypeName",
                "src": "202:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "271:2:1",
              "statements": []
            },
            "id": 58,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 55,
                "modifierName": {
                  "id": 54,
                  "name": "Stakeholder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1636,
                  "src": "257:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "257:13:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "254:2:1"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:1"
            },
            "scope": 260,
            "src": "243:30:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "442:437:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 73,
                              "name": "_stakeholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "457:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeholder_$1318_storage_$",
                                "typeString": "mapping(address => struct Stakeholder.stakeholder storage ref)"
                              }
                            },
                            "id": 76,
                            "indexExpression": {
                              "expression": {
                                "id": 74,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "471:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "471:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "457:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_stakeholder_$1318_storage",
                              "typeString": "struct Stakeholder.stakeholder storage ref"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1309,
                          "src": "457:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "498:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "490:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "490:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "490:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "457:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661726d65723a3a72656769737465724661726d65723a204661726d657220616c72656164792072656769737465726564",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "502:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62a7648a843efbae99b7b51f833f3035e679303964cd369b587533d443eeedab",
                          "typeString": "literal_string \"Farmer::registerFarmer: Farmer already registered\""
                        },
                        "value": "Farmer::registerFarmer: Farmer already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62a7648a843efbae99b7b51f833f3035e679303964cd369b587533d443eeedab",
                          "typeString": "literal_string \"Farmer::registerFarmer: Farmer already registered\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "448:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "448:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "448:106:1"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 86,
                        "name": "_stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "560:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeholder_$1318_storage_$",
                          "typeString": "mapping(address => struct Stakeholder.stakeholder storage ref)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "574:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "574:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "560:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stakeholder_$1318_storage",
                        "typeString": "struct Stakeholder.stakeholder storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "600:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "600:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 93,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "612:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 94,
                          "name": "_location",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "619:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 95,
                          "name": "_role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "630:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "637:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 90,
                        "name": "stakeholder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1318,
                        "src": "588:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_stakeholder_$1318_storage_ptr_$",
                          "typeString": "type(struct Stakeholder.stakeholder storage pointer)"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "588:55:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                        "typeString": "struct Stakeholder.stakeholder memory"
                      }
                    },
                    "src": "560:83:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stakeholder_$1318_storage",
                      "typeString": "struct Stakeholder.stakeholder storage ref"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "560:83:1"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100,
                        "name": "_farmerRawProducts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "649:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                          "typeString": "mapping(address => string storage ref[] storage ref)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "expression": {
                          "id": 101,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "668:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "668:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "649:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "_rawProducts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "682:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "649:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "649:45:1"
                },
                {
                  "body": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "747:67:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 124,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "796:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "796:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 118,
                                "name": "_rawProductFarmers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "755:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(string memory => address[] storage ref)"
                                }
                              },
                              "id": 122,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 119,
                                  "name": "_rawProducts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "774:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "string memory[] memory"
                                  }
                                },
                                "id": 121,
                                "indexExpression": {
                                  "id": 120,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "787:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "774:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "755:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "755:40:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "755:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "755:52:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 111,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "717:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 112,
                        "name": "_rawProducts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "721:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "721:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "717:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 129,
                  "initializationExpression": {
                    "assignments": [
                      108
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 129,
                        "src": "705:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "705:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 110,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "714:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "705:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "742:3:1",
                      "subExpression": {
                        "id": 115,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "742:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 117,
                    "nodeType": "ExpressionStatement",
                    "src": "742:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "700:114:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "846:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "846:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 130,
                        "name": "_stakeholderAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "819:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "819:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "819:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "819:38:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "870:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 71,
                  "id": 138,
                  "nodeType": "Return",
                  "src": "863:11:1"
                }
              ]
            },
            "functionSelector": "7bb08f33",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerFarmer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "306:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_location",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "332:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "362:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_rawProducts",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "387:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 65,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "387:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 66,
                    "nodeType": "ArrayTypeName",
                    "src": "387:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "300:119:1"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "436:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:6:1"
            },
            "scope": 260,
            "src": "277:602:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "955:500:1",
              "statements": [
                {
                  "assignments": [
                    148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 148,
                      "mutability": "mutable",
                      "name": "productAlreadyAdded",
                      "nodeType": "VariableDeclaration",
                      "scope": 217,
                      "src": "961:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "961:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "988:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "961:32:1"
                },
                {
                  "body": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "1064:175:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "components": [
                                      {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 168,
                                            "name": "_farmerRawProducts",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 47,
                                            "src": "1104:18:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                                              "typeString": "mapping(address => string storage ref[] storage ref)"
                                            }
                                          },
                                          "id": 171,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 169,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "1123:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 170,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "1123:10:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1104:30:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 173,
                                        "indexExpression": {
                                          "id": 172,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 152,
                                          "src": "1135:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1104:33:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "id": 174,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1103:35:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 166,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "1086:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "1086:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1086:53:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 165,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "1076:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1076:64:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "components": [
                                      {
                                        "id": 180,
                                        "name": "_rawProduct",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 142,
                                        "src": "1172:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "id": 181,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1171:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 178,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "1154:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "1154:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1154:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 177,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "1144:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1144:42:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1076:110:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 190,
                        "nodeType": "IfStatement",
                        "src": "1072:161:1",
                        "trueBody": {
                          "id": 189,
                          "nodeType": "Block",
                          "src": "1188:45:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 185,
                                  "name": "productAlreadyAdded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "1198:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1220:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1198:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 188,
                              "nodeType": "ExpressionStatement",
                              "src": "1198:26:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 155,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "1016:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 156,
                          "name": "_farmerRawProducts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1020:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                            "typeString": "mapping(address => string storage ref[] storage ref)"
                          }
                        },
                        "id": 159,
                        "indexExpression": {
                          "expression": {
                            "id": 157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1039:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1039:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1020:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1016:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 192,
                  "initializationExpression": {
                    "assignments": [
                      152
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1004:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1004:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 154,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1013:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1004:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1059:3:1",
                      "subExpression": {
                        "id": 162,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1059:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 164,
                    "nodeType": "ExpressionStatement",
                    "src": "1059:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "999:240:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1252:20:1",
                        "subExpression": {
                          "id": 194,
                          "name": "productAlreadyAdded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "1253:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661726d65723a3a61646452617750726f647563743a205261772070726f6475637420616c7265616479206164646564",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1274:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b38f0221178b2b5e310bb647af250b228925d8de34c63d0a58b72978601f4ac",
                          "typeString": "literal_string \"Farmer::addRawProduct: Raw product already added\""
                        },
                        "value": "Farmer::addRawProduct: Raw product already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b38f0221178b2b5e310bb647af250b228925d8de34c63d0a58b72978601f4ac",
                          "typeString": "literal_string \"Farmer::addRawProduct: Raw product already added\""
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1244:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1244:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 204,
                        "name": "_rawProduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1367:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 199,
                          "name": "_farmerRawProducts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1331:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                            "typeString": "mapping(address => string storage ref[] storage ref)"
                          }
                        },
                        "id": 202,
                        "indexExpression": {
                          "expression": {
                            "id": 200,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1350:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1350:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1331:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1331:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1331:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 211,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1422:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1422:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 207,
                          "name": "_rawProductFarmers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "1385:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 209,
                        "indexExpression": {
                          "id": 208,
                          "name": "_rawProduct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "1404:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1385:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1385:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:48:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1446:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 146,
                  "id": 216,
                  "nodeType": "Return",
                  "src": "1439:11:1"
                }
              ]
            },
            "functionSelector": "880f8fd7",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addRawProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "_rawProduct",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "906:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:27:1"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "949:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:6:1"
            },
            "scope": 260,
            "src": "883:572:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "1599:77:1",
              "statements": [
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 232,
                      "name": "farmer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "1605:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                        "typeString": "struct Stakeholder.stakeholder memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 235,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 220,
                          "src": "1624:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 233,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
                          "src": "1614:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Farmer_$260_$",
                            "typeString": "type(contract super Farmer)"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "get",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1411,
                        "src": "1614:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_stakeholder_$1318_memory_ptr_$",
                          "typeString": "function (address) view returns (struct Stakeholder.stakeholder memory)"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1614:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                        "typeString": "struct Stakeholder.stakeholder memory"
                      }
                    },
                    "src": "1605:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                      "typeString": "struct Stakeholder.stakeholder memory"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "1605:23:1"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 239,
                      "name": "rawProducts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "1634:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 240,
                        "name": "_farmerRawProducts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1648:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                          "typeString": "mapping(address => string storage ref[] storage ref)"
                        }
                      },
                      "id": 242,
                      "indexExpression": {
                        "id": 241,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "1667:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1648:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "src": "1634:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:37:1"
                }
              ]
            },
            "functionSelector": "e7609c16",
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 223,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 220,
                    "src": "1519:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 224,
                "modifierName": {
                  "id": 222,
                  "name": "onlyStakeholder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1599,
                  "src": "1503:15:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1503:20:1"
              }
            ],
            "name": "getFarmer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "1478:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1478:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1477:13:1"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "farmer",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "1537:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                    "typeString": "struct Stakeholder.stakeholder"
                  },
                  "typeName": {
                    "id": 226,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 225,
                      "name": "stakeholder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1318,
                      "src": "1537:11:1"
                    },
                    "referencedDeclaration": 1318,
                    "src": "1537:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stakeholder_$1318_storage_ptr",
                      "typeString": "struct Stakeholder.stakeholder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "rawProducts",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "1568:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 228,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1568:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 229,
                    "nodeType": "ArrayTypeName",
                    "src": "1568:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1531:68:1"
            },
            "scope": 260,
            "src": "1459:217:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "1776:49:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 254,
                      "name": "_rawProductFarmers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "1789:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 256,
                    "indexExpression": {
                      "id": 255,
                      "name": "_rawProduct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "1808:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1789:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 253,
                  "id": 257,
                  "nodeType": "Return",
                  "src": "1782:38:1"
                }
              ]
            },
            "functionSelector": "af8f44cc",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRawProductFarmers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "_rawProduct",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1710:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1709:27:1"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1758:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 250,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1758:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 251,
                    "nodeType": "ArrayTypeName",
                    "src": "1758:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1757:18:1"
            },
            "scope": 260,
            "src": "1680:145:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 261,
        "src": "91:1737:1"
      }
    ],
    "src": "39:1789:1"
  },
  "legacyAST": {
    "absolutePath": "/D/MIT Academy of Engineering/Major Project/Major_Project_Code/supply-chain-dev/src/Smart-Contract/Contracts/Farmer.sol",
    "exportedSymbols": {
      "Admin": [
        37
      ],
      "Farmer": [
        260
      ],
      "Stakeholder": [
        1636
      ]
    },
    "id": 261,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 39,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:1"
      },
      {
        "absolutePath": "/D/MIT Academy of Engineering/Major Project/Major_Project_Code/supply-chain-dev/src/Smart-Contract/Contracts/Stakeholder.sol",
        "file": "./Stakeholder.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 261,
        "sourceUnit": 1637,
        "src": "63:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41,
              "name": "Stakeholder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1636,
              "src": "110:11:1"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "110:11:1"
          }
        ],
        "contractDependencies": [
          37,
          1636
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 260,
        "linearizedBaseContracts": [
          260,
          1636,
          37
        ],
        "name": "Farmer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "518cc0b3",
            "id": 47,
            "mutability": "mutable",
            "name": "_farmerRawProducts",
            "nodeType": "VariableDeclaration",
            "scope": 260,
            "src": "126:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
              "typeString": "mapping(address => string[])"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "134:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "126:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                "typeString": "mapping(address => string[])"
              },
              "valueType": {
                "baseType": {
                  "id": 44,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "145:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 45,
                "nodeType": "ArrayTypeName",
                "src": "145:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8531358f",
            "id": 52,
            "mutability": "mutable",
            "name": "_rawProductFarmers",
            "nodeType": "VariableDeclaration",
            "scope": 260,
            "src": "184:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(string => address[])"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 48,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "192:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "184:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(string => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 49,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "202:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 50,
                "nodeType": "ArrayTypeName",
                "src": "202:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "271:2:1",
              "statements": []
            },
            "id": 58,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 55,
                "modifierName": {
                  "id": 54,
                  "name": "Stakeholder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1636,
                  "src": "257:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "257:13:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "254:2:1"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:1"
            },
            "scope": 260,
            "src": "243:30:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "442:437:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 73,
                              "name": "_stakeholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "457:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeholder_$1318_storage_$",
                                "typeString": "mapping(address => struct Stakeholder.stakeholder storage ref)"
                              }
                            },
                            "id": 76,
                            "indexExpression": {
                              "expression": {
                                "id": 74,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "471:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "471:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "457:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_stakeholder_$1318_storage",
                              "typeString": "struct Stakeholder.stakeholder storage ref"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1309,
                          "src": "457:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "498:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "490:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "490:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "490:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "457:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661726d65723a3a72656769737465724661726d65723a204661726d657220616c72656164792072656769737465726564",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "502:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62a7648a843efbae99b7b51f833f3035e679303964cd369b587533d443eeedab",
                          "typeString": "literal_string \"Farmer::registerFarmer: Farmer already registered\""
                        },
                        "value": "Farmer::registerFarmer: Farmer already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62a7648a843efbae99b7b51f833f3035e679303964cd369b587533d443eeedab",
                          "typeString": "literal_string \"Farmer::registerFarmer: Farmer already registered\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "448:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "448:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "448:106:1"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 86,
                        "name": "_stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "560:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_stakeholder_$1318_storage_$",
                          "typeString": "mapping(address => struct Stakeholder.stakeholder storage ref)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "574:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "574:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "560:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stakeholder_$1318_storage",
                        "typeString": "struct Stakeholder.stakeholder storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "600:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "600:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 93,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "612:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 94,
                          "name": "_location",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "619:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 95,
                          "name": "_role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "630:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "637:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 90,
                        "name": "stakeholder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1318,
                        "src": "588:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_stakeholder_$1318_storage_ptr_$",
                          "typeString": "type(struct Stakeholder.stakeholder storage pointer)"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "588:55:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                        "typeString": "struct Stakeholder.stakeholder memory"
                      }
                    },
                    "src": "560:83:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stakeholder_$1318_storage",
                      "typeString": "struct Stakeholder.stakeholder storage ref"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "560:83:1"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100,
                        "name": "_farmerRawProducts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "649:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                          "typeString": "mapping(address => string storage ref[] storage ref)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "expression": {
                          "id": 101,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "668:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "668:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "649:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "_rawProducts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "682:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "649:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "649:45:1"
                },
                {
                  "body": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "747:67:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 124,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "796:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "796:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 118,
                                "name": "_rawProductFarmers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "755:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(string memory => address[] storage ref)"
                                }
                              },
                              "id": 122,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 119,
                                  "name": "_rawProducts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "774:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "string memory[] memory"
                                  }
                                },
                                "id": 121,
                                "indexExpression": {
                                  "id": 120,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "787:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "774:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "755:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "755:40:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "755:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "755:52:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 111,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "717:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 112,
                        "name": "_rawProducts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "721:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "721:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "717:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 129,
                  "initializationExpression": {
                    "assignments": [
                      108
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 129,
                        "src": "705:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "705:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 110,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "714:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "705:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "742:3:1",
                      "subExpression": {
                        "id": 115,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "742:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 117,
                    "nodeType": "ExpressionStatement",
                    "src": "742:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "700:114:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "846:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "846:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 130,
                        "name": "_stakeholderAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "819:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "819:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "819:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "819:38:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "870:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 71,
                  "id": 138,
                  "nodeType": "Return",
                  "src": "863:11:1"
                }
              ]
            },
            "functionSelector": "7bb08f33",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerFarmer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "306:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_location",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "332:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "362:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_rawProducts",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "387:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 65,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "387:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 66,
                    "nodeType": "ArrayTypeName",
                    "src": "387:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "300:119:1"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "436:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:6:1"
            },
            "scope": 260,
            "src": "277:602:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "955:500:1",
              "statements": [
                {
                  "assignments": [
                    148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 148,
                      "mutability": "mutable",
                      "name": "productAlreadyAdded",
                      "nodeType": "VariableDeclaration",
                      "scope": 217,
                      "src": "961:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "961:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "988:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "961:32:1"
                },
                {
                  "body": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "1064:175:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "components": [
                                      {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 168,
                                            "name": "_farmerRawProducts",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 47,
                                            "src": "1104:18:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                                              "typeString": "mapping(address => string storage ref[] storage ref)"
                                            }
                                          },
                                          "id": 171,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 169,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "1123:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 170,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "1123:10:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1104:30:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                            "typeString": "string storage ref[] storage ref"
                                          }
                                        },
                                        "id": 173,
                                        "indexExpression": {
                                          "id": 172,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 152,
                                          "src": "1135:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1104:33:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "id": 174,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1103:35:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 166,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "1086:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "1086:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1086:53:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 165,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "1076:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1076:64:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "components": [
                                      {
                                        "id": 180,
                                        "name": "_rawProduct",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 142,
                                        "src": "1172:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "id": 181,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1171:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 178,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "1154:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "1154:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1154:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 177,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "1144:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1144:42:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1076:110:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 190,
                        "nodeType": "IfStatement",
                        "src": "1072:161:1",
                        "trueBody": {
                          "id": 189,
                          "nodeType": "Block",
                          "src": "1188:45:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 185,
                                  "name": "productAlreadyAdded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "1198:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1220:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1198:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 188,
                              "nodeType": "ExpressionStatement",
                              "src": "1198:26:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 155,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "1016:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 156,
                          "name": "_farmerRawProducts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1020:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                            "typeString": "mapping(address => string storage ref[] storage ref)"
                          }
                        },
                        "id": 159,
                        "indexExpression": {
                          "expression": {
                            "id": 157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1039:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1039:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1020:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1016:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 192,
                  "initializationExpression": {
                    "assignments": [
                      152
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1004:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1004:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 154,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1013:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1004:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1059:3:1",
                      "subExpression": {
                        "id": 162,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1059:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 164,
                    "nodeType": "ExpressionStatement",
                    "src": "1059:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "999:240:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1252:20:1",
                        "subExpression": {
                          "id": 194,
                          "name": "productAlreadyAdded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "1253:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661726d65723a3a61646452617750726f647563743a205261772070726f6475637420616c7265616479206164646564",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1274:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b38f0221178b2b5e310bb647af250b228925d8de34c63d0a58b72978601f4ac",
                          "typeString": "literal_string \"Farmer::addRawProduct: Raw product already added\""
                        },
                        "value": "Farmer::addRawProduct: Raw product already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b38f0221178b2b5e310bb647af250b228925d8de34c63d0a58b72978601f4ac",
                          "typeString": "literal_string \"Farmer::addRawProduct: Raw product already added\""
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1244:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1244:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 204,
                        "name": "_rawProduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1367:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 199,
                          "name": "_farmerRawProducts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "1331:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                            "typeString": "mapping(address => string storage ref[] storage ref)"
                          }
                        },
                        "id": 202,
                        "indexExpression": {
                          "expression": {
                            "id": 200,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1350:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1350:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1331:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1331:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1331:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 211,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1422:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1422:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 207,
                          "name": "_rawProductFarmers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "1385:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 209,
                        "indexExpression": {
                          "id": 208,
                          "name": "_rawProduct",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "1404:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1385:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1385:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:48:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1446:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 146,
                  "id": 216,
                  "nodeType": "Return",
                  "src": "1439:11:1"
                }
              ]
            },
            "functionSelector": "880f8fd7",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addRawProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "_rawProduct",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "906:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:27:1"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "949:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:6:1"
            },
            "scope": 260,
            "src": "883:572:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "1599:77:1",
              "statements": [
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 232,
                      "name": "farmer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "1605:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                        "typeString": "struct Stakeholder.stakeholder memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 235,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 220,
                          "src": "1624:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 233,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
                          "src": "1614:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Farmer_$260_$",
                            "typeString": "type(contract super Farmer)"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "get",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1411,
                        "src": "1614:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_stakeholder_$1318_memory_ptr_$",
                          "typeString": "function (address) view returns (struct Stakeholder.stakeholder memory)"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1614:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                        "typeString": "struct Stakeholder.stakeholder memory"
                      }
                    },
                    "src": "1605:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                      "typeString": "struct Stakeholder.stakeholder memory"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "1605:23:1"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 239,
                      "name": "rawProducts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "1634:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 240,
                        "name": "_farmerRawProducts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1648:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                          "typeString": "mapping(address => string storage ref[] storage ref)"
                        }
                      },
                      "id": 242,
                      "indexExpression": {
                        "id": 241,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "1667:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1648:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "src": "1634:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:37:1"
                }
              ]
            },
            "functionSelector": "e7609c16",
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 223,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 220,
                    "src": "1519:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 224,
                "modifierName": {
                  "id": 222,
                  "name": "onlyStakeholder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1599,
                  "src": "1503:15:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1503:20:1"
              }
            ],
            "name": "getFarmer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "1478:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1478:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1477:13:1"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "farmer",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "1537:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_stakeholder_$1318_memory_ptr",
                    "typeString": "struct Stakeholder.stakeholder"
                  },
                  "typeName": {
                    "id": 226,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 225,
                      "name": "stakeholder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1318,
                      "src": "1537:11:1"
                    },
                    "referencedDeclaration": 1318,
                    "src": "1537:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_stakeholder_$1318_storage_ptr",
                      "typeString": "struct Stakeholder.stakeholder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "rawProducts",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "1568:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 228,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1568:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 229,
                    "nodeType": "ArrayTypeName",
                    "src": "1568:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1531:68:1"
            },
            "scope": 260,
            "src": "1459:217:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "1776:49:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 254,
                      "name": "_rawProductFarmers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "1789:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 256,
                    "indexExpression": {
                      "id": 255,
                      "name": "_rawProduct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "1808:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1789:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 253,
                  "id": 257,
                  "nodeType": "Return",
                  "src": "1782:38:1"
                }
              ]
            },
            "functionSelector": "af8f44cc",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRawProductFarmers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "_rawProduct",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1710:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1709:27:1"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1758:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 250,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1758:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 251,
                    "nodeType": "ArrayTypeName",
                    "src": "1758:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1757:18:1"
            },
            "scope": 260,
            "src": "1680:145:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 261,
        "src": "91:1737:1"
      }
    ],
    "src": "39:1789:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3250A35219b6adAf745d33fBbbE5623255bedf56",
      "transactionHash": "0x5c3f20cecd62b47c89f8504e0932301a0df8bbfbcf58995daa831c818af69dce"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2023-06-08T14:15:34.311Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}