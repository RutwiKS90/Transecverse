{"ast":null,"code":"export const fetchFarmer = async (curr_address, farmerContract, id) => {\n  const response = await farmerContract.methods.getFarmer(id).call({\n    from: curr_address\n  });\n  return {\n    ...response.farmer,\n    formattedAddress: id.substring(0, 6) + \"...\" + id.substring(id.length - 4, id.length),\n    rawProducts: response.rawProducts\n  };\n};\nexport const fetchManufacturer = async (curr_address, manufacturerContract, id) => {\n  const response = await manufacturerContract.methods.getManufacturer(id).call({\n    from: curr_address\n  });\n  return {\n    ...response.manufacturer,\n    isRenewableUsed: response.isRenewableUsed,\n    formattedAddress: id.substring(0, 6) + \"...\" + id.substring(id.length - 4, id.length),\n    rawProducts: response.rawProducts,\n    launchedProductIds: response.launchedProductIds\n  };\n};\nexport const fetchStakeholder = async (curr_address, stakeholderContract, id) => {\n  const response = await stakeholderContract.methods.get(id).call({\n    from: curr_address\n  });\n  return {\n    ...response,\n    formattedAddress: id.substring(0, 6) + \"...\" + id.substring(id.length - 4, id.length)\n  };\n};\nexport const formattedAddress = address => {\n  return address.substring(0, 6) + \"...\" + address.substring(address.length - 4);\n};","map":{"version":3,"names":["fetchFarmer","curr_address","farmerContract","id","response","methods","getFarmer","call","from","farmer","formattedAddress","substring","length","rawProducts","fetchManufacturer","manufacturerContract","getManufacturer","manufacturer","isRenewableUsed","launchedProductIds","fetchStakeholder","stakeholderContract","get","address"],"sources":["D:/MIT Academy of Engineering/Major Project/Major_Project_Code/supply-chain-dev/src/Services/Utils/stakeholder.js"],"sourcesContent":["export const fetchFarmer = async (curr_address, farmerContract, id) => {\n  const response = await farmerContract.methods.getFarmer(id).call({from: curr_address});\n  return {\n    ...response.farmer,\n    formattedAddress: id.substring(0, 6) + \"...\" + id.substring(id.length - 4, id.length),\n    rawProducts: response.rawProducts\n  }\n}\n\nexport const fetchManufacturer = async (curr_address, manufacturerContract, id) => {\n  const response = await manufacturerContract.methods.getManufacturer(id).call({from: curr_address});\n  return {\n    ...response.manufacturer,\n    isRenewableUsed: response.isRenewableUsed,\n    formattedAddress: id.substring(0, 6) + \"...\" + id.substring(id.length - 4, id.length),\n    rawProducts: response.rawProducts,\n    launchedProductIds: response.launchedProductIds\n  }\n}\n\nexport const fetchStakeholder = async (curr_address, stakeholderContract, id) => {\n  const response = await stakeholderContract.methods.get(id).call({from: curr_address});\n  return {\n    ...response,\n    formattedAddress: id.substring(0, 6) + \"...\" + id.substring(id.length - 4, id.length),\n  }\n}\n\nexport const formattedAddress = (address) => {\n  return address.substring(0,6) + \"...\" + address.substring(address.length - 4);\n}"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAOC,YAAY,EAAEC,cAAc,EAAEC,EAAE,KAAK;EACrE,MAAMC,QAAQ,GAAG,MAAMF,cAAc,CAACG,OAAO,CAACC,SAAS,CAACH,EAAE,CAAC,CAACI,IAAI,CAAC;IAACC,IAAI,EAAEP;EAAY,CAAC,CAAC;EACtF,OAAO;IACL,GAAGG,QAAQ,CAACK,MAAM;IAClBC,gBAAgB,EAAEP,EAAE,CAACQ,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGR,EAAE,CAACQ,SAAS,CAACR,EAAE,CAACS,MAAM,GAAG,CAAC,EAAET,EAAE,CAACS,MAAM,CAAC;IACrFC,WAAW,EAAET,QAAQ,CAACS;EACxB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOb,YAAY,EAAEc,oBAAoB,EAAEZ,EAAE,KAAK;EACjF,MAAMC,QAAQ,GAAG,MAAMW,oBAAoB,CAACV,OAAO,CAACW,eAAe,CAACb,EAAE,CAAC,CAACI,IAAI,CAAC;IAACC,IAAI,EAAEP;EAAY,CAAC,CAAC;EAClG,OAAO;IACL,GAAGG,QAAQ,CAACa,YAAY;IACxBC,eAAe,EAAEd,QAAQ,CAACc,eAAe;IACzCR,gBAAgB,EAAEP,EAAE,CAACQ,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGR,EAAE,CAACQ,SAAS,CAACR,EAAE,CAACS,MAAM,GAAG,CAAC,EAAET,EAAE,CAACS,MAAM,CAAC;IACrFC,WAAW,EAAET,QAAQ,CAACS,WAAW;IACjCM,kBAAkB,EAAEf,QAAQ,CAACe;EAC/B,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOnB,YAAY,EAAEoB,mBAAmB,EAAElB,EAAE,KAAK;EAC/E,MAAMC,QAAQ,GAAG,MAAMiB,mBAAmB,CAAChB,OAAO,CAACiB,GAAG,CAACnB,EAAE,CAAC,CAACI,IAAI,CAAC;IAACC,IAAI,EAAEP;EAAY,CAAC,CAAC;EACrF,OAAO;IACL,GAAGG,QAAQ;IACXM,gBAAgB,EAAEP,EAAE,CAACQ,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGR,EAAE,CAACQ,SAAS,CAACR,EAAE,CAACS,MAAM,GAAG,CAAC,EAAET,EAAE,CAACS,MAAM;EACtF,CAAC;AACH,CAAC;AAED,OAAO,MAAMF,gBAAgB,GAAIa,OAAO,IAAK;EAC3C,OAAOA,OAAO,CAACZ,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,KAAK,GAAGY,OAAO,CAACZ,SAAS,CAACY,OAAO,CAACX,MAAM,GAAG,CAAC,CAAC;AAC/E,CAAC"},"metadata":{},"sourceType":"module"}